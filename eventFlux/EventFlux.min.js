// mB v8.2.5 on 2020-02-26T01:00:00.424Z
export class EventFlux{constructor(){this.topics={}}getTopic(identifier,options){return this.topics[identifier]||(this.topics[identifier]=new Topic(identifier,options)),this.topics[identifier]}getTopics(){return this.topics}}class Topic{constructor(identifier,options){this.listeners={},this.queue={},this.identifier=identifier,this.options=options||{}}addListener(binding,callback){var listener=new Listener(binding,callback,this);return this.listeners[binding]=this.listeners[binding]||[],this.listeners[binding].push(listener),!0===this.options.persistent&&this.consume(binding,this.queue,listener),listener}removeListener(listener){for(var i=0,listeners=this.listeners[listener.event]||[];i<listeners.length;i++)if(listeners[i]===listener)return void this.listeners[listener.event].splice(i,1)}dispatch(event,data){var binding,listeners=[];for(binding in this.listeners)this.matchWildCard(event,binding)&&(listeners=listeners.concat(this.listeners[binding]));for(var i in listeners)listeners[i].callback&&listeners[i].callback(data);listeners.length||!0!==this.options.persistent||(this.queue[event]=this.queue[event]||[],this.queue[event].push(data))}dispatchAsync(event,data){const THIZ=this;setTimeout((function(){THIZ.dispatch(event,data)}),1)}consume(binding,queue,listener){for(var key in queue)if(this.matchWildCard(key,binding)){var messages=queue[key];for(var i in messages)listener.callback(messages[i]);queue[key].splice(0,queue[key].length)}}matchWildCard(str,rule){return new RegExp('^'+rule.split('*').join('.*')+'$').test(str)}}class Listener{constructor(event,callback,topic){this.event=event,this.callback=callback,this.topic=topic}unbind(){this.topic.removeListener(this)}}window.defEventBus=(new EventFlux).getTopic('DEFAULT',{persistent:!0});