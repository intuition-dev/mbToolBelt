surveyitem-comp

   div { question }
   br
   div
   <virtual each={ items }>

      .pretty.p-default.p-round.p-pulse.p-bigger
         input(type='radio', value= '{ choice }', name='{name}')
         .state.p-primary
            label { choice }
      br
      br
   </virtual>
   // inline needs the button for clicked event
   <yield />
   br

   script.
      var THIZ = this
      console.log('ENV',window.ENV)

      this.on('mount', function() {
         //click
         console.log('mounted')
         this.root.querySelectorAll('button')[0].addEventListener('click', function(el){
            // note local scope in THIZ.root
            var sel = THIZ.root.querySelector('input[name="' +THIZ.name+ '"]:checked').value
            disE(THIZ.ID, sel)
         })
      })
 

      init(question, arr, ID, foo) {

         THIZ.name = makeid() // each radio group needs a unique name
         THIZ.ID = ID         
         console.log(THIZ.name)
         this.question = question

         var sz = arr.length         
         THIZ.items = []
         for(i = 0; i < sz; i++) {
            var choice = arr[i]
            var item = {}
            item.choice = choice
            THIZ.items.push(item)
         }
         console.log(THIZ.items)
         
         THIZ.update() // this makes comps special vs JQ
      }

      function makeid() {
         var length = 6
         var result           = ''
         var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
         var charactersLength = characters.length
         for ( var i = 0; i < length; i++ ) {
            result += characters.charAt(Math.floor(Math.random() * charactersLength))
         }
         return result
      }